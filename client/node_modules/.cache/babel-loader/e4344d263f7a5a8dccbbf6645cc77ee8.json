{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/klong/Documents/GitHub/beehive/client/src/Pages/Group.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../CSS/Group.css\";\nimport \"../Components/groupList\";\n\nfunction ChangeEvent(props) {\n  _s();\n\n  const [name, setName] = React.useState(\"\");\n\n  const handleSubmit = evt => {\n    evt.preventDefault(); // props.sendevent({name}.name, {Description}.Description, {Address}.Address, {Date}.Date, {Time}.Time)\n    // TODO create a function to pass the data above to a event class\n    // To be appended to a table\n\n    console.log(\"FUCK\", {\n      name\n    }.name);\n    props.sendEdit({\n      name\n    }.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Nice \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", \"Event Name\", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \":\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 27\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", props.Event.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Change Entry?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangeEvent, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = ChangeEvent;\n\nfunction ViewEvents(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.Groups.map((group, id) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.DeleteEvents(id),\n          children: [\" \", \"Delete Group\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.showEditEvent(id),\n          children: [\" \", \"Edit Event\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\" \", group.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ViewEvents;\nexport default class GroupPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.state = {\n      groups: [{\n        name: \"Good Group\"\n      }, {\n        name: \"Bad Group\"\n      }],\n      edit: false,\n      curEditId: -1\n    };\n  }\n\n  getNewGroup(name) {\n    this.state.groups.push({\n      name\n    });\n    this.setState({\n      groups: this.state.groups\n    });\n  }\n\n  deletGroup(id) {\n    alert(\"Email people goign to event \" + this.state.groups[id].name + \" about the event's cancelilation\");\n    this.state.groups.splice(id, 1);\n    this.setState({\n      groups: this.state.groups\n    });\n  }\n\n  showEditGroup(id) {\n    let currEvent = this.state.groups[id];\n\n    if (id == this.state.curEditId) {\n      this.setState({\n        edit: !this.state.edit\n      });\n      this.setState({\n        curEditId: -1\n      });\n    } else {\n      this.setState({\n        edit: true\n      });\n      this.setState({\n        curEditId: id\n      });\n    }\n  }\n\n  EditEvent(name) {\n    this.state.groups[this.state.curEditId] = {\n      name\n    };\n    console.log(\"ROCK\", this.state.groups);\n    this.setState({\n      groups: this.state.groups\n    });\n  }\n\n  render() {\n    console.log(this.state.curEditId, this.state.edit);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", \"This is a prototype \", this.state.curEditId, \" \", this.state.edit, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChangeEvent, {\n          Event: this.state.groups[this.state.curEditId],\n          sendEdit: this.EditEvent.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(AddEvent, {\n        userid: this.props.userid,\n        sendevent: this.getNewEvent.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ViewEvents, {\n        Events: this.state.events,\n        DeleteEvents: this.deleteEvent.bind(this),\n        showEditEvent: this.showEditEvent.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeEvent\");\n$RefreshReg$(_c2, \"ViewEvents\");","map":{"version":3,"sources":["/mnt/c/Users/klong/Documents/GitHub/beehive/client/src/Pages/Group.tsx"],"names":["React","ChangeEvent","props","name","setName","useState","handleSubmit","evt","preventDefault","console","log","sendEdit","Event","e","target","value","ViewEvents","Groups","map","group","id","DeleteEvents","showEditEvent","GroupPage","Component","constructor","state","groups","edit","curEditId","getNewGroup","push","setState","deletGroup","alert","splice","showEditGroup","currEvent","EditEvent","render","bind","userid","getNewEvent","events","deleteEvent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../CSS/Group.css\";\r\nimport LogoAndTitle from \"../Components/LogoAndTitle\";\r\nimport { group } from \"console\";\r\nimport \"../Components/groupList\";\r\n\r\nfunction ChangeEvent(props: { Event: any; sendEdit: any }) {\r\n  const [name, setName] = React.useState(\"\");\r\n\r\n  const handleSubmit = (evt: any) => {\r\n    evt.preventDefault();\r\n    // props.sendevent({name}.name, {Description}.Description, {Address}.Address, {Date}.Date, {Time}.Time)\r\n    // TODO create a function to pass the data above to a event class\r\n    // To be appended to a table\r\n    console.log(\"FUCK\", { name }.name);\r\n    props.sendEdit({ name }.name);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1> Nice </h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <table>\r\n          <tr>\r\n            <th>\r\n              {\" \"}\r\n              <label>\r\n                {\" \"}\r\n                Event Name<b>:</b>{\" \"}\r\n              </label>\r\n            </th>\r\n            <th>\r\n              {\" \"}\r\n              <label> {props.Event.name} </label>\r\n            </th>\r\n            <th>\r\n              {\" \"}\r\n              <input\r\n                type=\"text\"\r\n                id=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />{\" \"}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <input type=\"submit\" value=\"Change Entry?\" />\r\n          </tr>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype GroupType = {\r\n  name: string;\r\n};\r\n\r\nfunction ViewEvents(props: {\r\n  Groups: any;\r\n  DeleteEvents: any;\r\n  showEditEvent: any;\r\n}) {\r\n  return (\r\n    <div>\r\n      {props.Groups.map((group: GroupType, id: number) => (\r\n        <tr>\r\n          <th>\r\n            <button onClick={() => props.DeleteEvents(id)}>\r\n              {\" \"}\r\n              Delete Group{\" \"}\r\n            </button>\r\n          </th>\r\n          <th>\r\n            <button onClick={() => props.showEditEvent(id)}>\r\n              {\" \"}\r\n              Edit Event{\" \"}\r\n            </button>\r\n          </th>\r\n          <th> {group.name} </th>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\ntype MyProps = {\r\n  // using `interface` is also ok\r\n  groupName: string;\r\n};\r\n\r\nexport default class GroupPage extends React.Component<\r\n  MyProps,\r\n  { groups: any; edit: boolean; curEditId: number }\r\n> {\r\n  constructor(public props: MyProps) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [\r\n        {\r\n          name: \"Good Group\",\r\n        },\r\n        {\r\n          name: \"Bad Group\",\r\n        },\r\n      ],\r\n      edit: false,\r\n      curEditId: -1,\r\n    };\r\n  }\r\n  getNewGroup(name: string) {\r\n    this.state.groups.push({ name });\r\n    this.setState({ groups: this.state.groups });\r\n  }\r\n  deletGroup(id: number) {\r\n    alert(\r\n      \"Email people goign to event \" +\r\n        this.state.groups[id].name +\r\n        \" about the event's cancelilation\"\r\n    );\r\n    this.state.groups.splice(id, 1);\r\n    this.setState({ groups: this.state.groups });\r\n  }\r\n  showEditGroup(id: number) {\r\n    let currEvent = this.state.groups[id];\r\n    if (id == this.state.curEditId) {\r\n      this.setState({ edit: !this.state.edit });\r\n      this.setState({ curEditId: -1 });\r\n    } else {\r\n      this.setState({ edit: true });\r\n      this.setState({ curEditId: id });\r\n    }\r\n  }\r\n\r\n  EditEvent(name: string) {\r\n    this.state.groups[this.state.curEditId] = {\r\n      name,\r\n    };\r\n    console.log(\"ROCK\", this.state.groups);\r\n    this.setState({ groups: this.state.groups });\r\n  }\r\n  render() {\r\n    console.log(this.state.curEditId, this.state.edit);\r\n    return (\r\n      <div>\r\n        {this.state.edit ? (\r\n          <div>\r\n            <h1>\r\n              {\" \"}\r\n              This is a prototype {this.state.curEditId} {this.state.edit}{\" \"}\r\n            </h1>\r\n            <ChangeEvent\r\n              Event={this.state.groups[this.state.curEditId]}\r\n              sendEdit={this.EditEvent.bind(this)}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        <AddEvent\r\n          userid={this.props.userid}\r\n          sendevent={this.getNewEvent.bind(this)}\r\n        />\r\n        <ViewEvents\r\n          Events={this.state.events}\r\n          DeleteEvents={this.deleteEvent.bind(this)}\r\n          showEditEvent={this.showEditEvent.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}